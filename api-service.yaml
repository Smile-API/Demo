apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
        - name: api-service-app
          image: edupoli/api-service:v1.0.1
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "250m"
              memory: "256Mi"
            requests:
              cpu: "100m"
              memory: "80Mi"
          env:
            - name: NODE_ENV
              value: production
            - name: PORT
              value: '3000'
            - name: PUBLIC_API_URL
              value: "https://${PUBLIC_API_URL}"
            - name: PUBLIC_BACKEND_URL
              value: "https://${PUBLIC_BACKEND_URL}"
            - name: RABBITMQ_URI
              value: 'amqp://admin:admin@rabbitmq-cluster.infra.svc.cluster.local:5672'
            - name: REDIS_HOST
              value: 'redis-server-master-0.redis-server-headless.infra.svc.cluster.local'
            - name: REDIS_PORT
              value: '6379'
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: api-service-secrets
                  key: DATABASE_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: spa-backend-secrets
                  key: JWT_SECRET
          livenessProbe:
            httpGet:
              path: /v1/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /v1/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /data
              name: medias-storage
      imagePullSecrets:
        - name: api-service-registry
      volumes:
        - name: medias-storage
          persistentVolumeClaim:
            claimName: data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: api-service-svc
spec:
  selector:
    app: api-service
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
